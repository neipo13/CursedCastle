{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/index.js",
    "src/states/game.js",
    "src/states/menu.js",
    "src/states/midLevel.js",
    "src/util/Color.js",
    "src/util/playerHealth.js"
  ],
  "names": [],
  "mappings": "AAAA;;;;;ACAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;I,AAEM;iBAEL;;iBAAc;wBAAA;;0GAAA,AACP,KADO,AACF,KAAK,OADH,AACU,MADV,AACgB,WADhB,AAC2B,AACxC;;QAAA,AAAK,YAAL,AAAiB,AACjB;QAAA,AAAK,QAAL,AAAa,AACb;QAAA,AAAK,QAAL,AAAa,AACb;QAAA,AAAK,QAAQ,YAAb,AACA;QAAA,AAAK,SAAS,mBAAd,AACA;QAAA,AAAK,MAAL,AAAW,IAAX,AAAe,wBAAf,AAAkC,AAClC;QAAA,AAAK,MAAL,AAAW,IAAX,AAAe,wBAAf,AAAkC,AAClC;QAAA,AAAK,MAAL,AAAW,IAAX,AAAe,2BAAf,AAAqC,AACrC;QAAA,AAAK,MAAL,AAAW,MAVE,AAUb,AAAiB;SACjB;;;;EAbiB,O,AAAO;;AAiB1B,IAAA,AAAI;;;;;ACvBJ,IAAI;aAAO,AACE,AACT;YAFO,AAEC,AACR;YAHO,AAGC,AACR;YAJJ,AAAW,AAIC;AAJD,AACP;;AAMJ,IAAI,SAAJ,AAAa;IACT,QADJ,AACY;IACR,YAFJ,AAEgB;IACZ,QAHJ,AAGY;IACR,OAJJ,AAIW;IACP,SALJ,AAKa;IACT,QANJ,AAMY;IACR,QAPJ,AAOY;IACR,KARJ,AAQS;IACL,mBATJ,AASuB;IACnB,QAVJ,AAUY;IACR,UAXJ,AAWc;;AAEd,SAAA,AAAS,UAAU,AACf;aAAS,IAAT,AAAS,AAAI,AACb;WAAA,AAAO,KAAP,AAAY,AACZ;WAAA,AAAO,AAEP;;YAAA,AAAQ,AACX;;;AAID,SAAA,AAAS,SAAS,AACd;SAAA,AAAK,MAAL,AAAW,kBAAX,AAA6B,AAC7B;UAAA,AAAM,AACN;YAAA,AAAQ,AACR;SAAA,AAAK,MAAL,AAAW,WAAX,AAAsB,AACtB;uBAAmB,IAAI,OAAvB,AAAmB,AAAW,AAC9B;AAEA;;UAAA,AAAM,AACN;AACA;SAAK,KAAA,AAAK,IAVI,AAUd,AAAK,AAAS,SAAS,AACvB;gBAAY,KAAA,AAAK,IAAjB,AAAY,AAAS,AACrB;WAAO,KAAA,AAAK,IAAZ,AAAO,AAAS,AAChB;aAAS,KAAA,AAAK,IAAd,AAAS,AAAS,AAClB;cAAU,KAAA,AAAK,IAAf,AAAU,AAAS,AACnB;AACA;cAAA,AAAU,aAAV,AAAuB,AACvB;SAAA,AAAK,aAAL,AAAkB,AAClB;WAAA,AAAO,aAAP,AAAoB,AAEpB;;YAAQ,KAAA,AAAK,IAAb,AAAQ,AAAS,AACjB;YAAQ,KAAA,AAAK,IAAb,AAAQ,AAAS,AAEjB;;QAAI,YAAJ,AAAgB,AAChB;QAAI,YAAJ,AAAgB,AAChB;QAAI,YAzBU,AAyBd,AAAgB,GAAG,AAEnB;;AACA;SAAA,AAAK,WA5BS,AA4Bd,AAAgB,IAAI,AACpB;SAAA,AAAK,WAAL,AAAgB,AAChB;SAAA,AAAK,WAAL,AAAgB,AAEhB;;aAAA,AAAS,WAAT,AAAoB,WAApB,AAA+B,WAA/B,AAA0C,GAA1C,AAA6C,GAA7C,AAAgD,GAAhD,AAAmD,WAAnD,AAA8D,MAA9D,AAAoE,QAApE,AAA4E,OAA5E,AAAmF,OAAnF,AAA0F,IAA1F,AAA8F,MAA9F,AAAoG,AACpG;SAAA,AAAK,MAAL,AAAW,UAAX,AAAqB,GAArB,AAAwB,GAAG,KAAA,AAAK,WAAW,KAAhB,AAAqB,YAAY,YAA5D,AAA2B,AAA4C,IAAI,KAAA,AAAK,WAAW,KAAhB,AAAqB,YAAY,YAA5G,AAA2E,AAA6C,AAGxH;;WAAA,AAAO,OAAP,AAAc,IAAK,YAAY,KAAZ,AAAiB,WAAW,KAA7B,AAAkC,WAAa,KAAA,AAAK,YAAY,KAAA,AAAK,WAAvF,AAAiE,AAA+B,IAAhG,AAAqG,MAArG,AAA2G,AAC3G;SAAA,AAAK,OAAL,AAAY,IArCE,AAqCd,AAAgB,GAAG,AACnB;SAAA,AAAK,OAAL,AAAY,IAtCE,AAsCd,AAAgB,GAAG,AACnB;AAGA;;;AACA;AACA;AACA;AACA;AAEA;;QAAI,SAAS,KAAA,AAAK,IAAL,AAAS,MAAM,KAA5B,AAAa,AAAoB,AACjC;SAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,WAApB,AAA+B,AAC/B;WAAA,AAAO,GAAG,EAAE,GAAZ,AAAU,AAAK,OAAf,AAAsB,MAAM,OAAA,AAAO,OAAP,AAAc,SAA1C,AAAmD,AACnD;WAAA,AAAO,WAAP,AAAkB,IACd,YAAU,AACN;aAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,WAApB,AAA+B,AAC/B;gBAAA,AAAQ,AACR;yBAAA,AAAiB,SAAS,EAAC,GAAE,KAAA,AAAK,OAAR,AAAe,GAAG,GAAE,KAAA,AAAK,OAAzB,AAAgC,GAAG,OAAO,KAAA,AAAK,WAAW,KAA1D,AAA+D,UAAU,QAAO,KAAA,AAAK,WAAW,KAA1H,AAA0B,AAAqG,AAClI;AALL,OAAA,AAKO,AACP;WAAA,AAAO,AACV;;;AAED,SAAA,AAAS,SAAQ,AACb;QAAA,AAAG,OAAM,AACL;YAAI,aAAa,cAAjB,AAAiB,AAAc,AAC/B;YAAI,WAAW,SAAA,AAAS,OAAxB,AAAe,AAAgB,AAC/B;aAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,QAAQ,OAA5B,AAAmC,QAAnC,AAA2C,WAA3C,AAAsD,YAAY,OAAlE,AAAyE,AACzE;aAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,QAAQ,OAA5B,AAAmC,QAAnC,AAA2C,MAAM,OAAjD,AAAwD,AACxD;aAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,QAAQ,OAA5B,AAAmC,QAAnC,AAA2C,QAAQ,OAAnD,AAA0D,AAE1D;;aAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,QAApB,AAA4B,OAA5B,AAAmC,WAAnC,AAA8C,AAE9C;;aAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,QAApB,AAA4B,OAAO,OAAnC,AAA0C,QAAQ,SAAA,AAAS,OAA3D,AAAkD,AAAgB,SAAS,gBAAA,AAAgB,OAA3F,AAA2E,AAAuB,AAClG;aAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,QAApB,AAA4B,OAAO,OAAnC,AAA0C,QAA1C,AAAkD,AAElD;;aAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,QAApB,AAA4B,WAA5B,AAAuC,SAAS,UAAA,AAAU,WAA1D,AAAgD,AAAqB,AACrE;aAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,QAApB,AAA4B,OAA5B,AAAmC,SAAS,UAAA,AAAU,OAAtD,AAA4C,AAAiB,AAC7D;aAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,QAApB,AAA4B,OAA5B,AAAmC,SAAS,UAAA,AAAU,OAAtD,AAA4C,AAAiB,AAE7D;;cAAA,AAAM,QAAN,AAAc,YAAd,AAA0B,AAC1B;cAAA,AAAM,QAAN,AAAc,YAAd,AAA0B,MAAM,OAAA,AAAO,OAAvC,AAA8C,GAAG,OAAA,AAAO,OAAxD,AAA+D,GAAG,OAAA,AAAO,OAAP,AAAc,MAAhF,AAAsF,AACtF;gBAAA,AAAQ,QAAR,AAAgB,YAAhB,AAA4B,AAG5B;;YAAI,WAAW,MAAf,AAAe,AAAM,AACrB;eAAA,AAAO,OAAP,AAAc,AACd;YAAI,SAAS,OAAb,AAAa,AAAO,AAGpB;;YAAG,KAAA,AAAK,OAAL,AAAY,MAAM,OAAlB,AAAyB,KAAK,KAAA,AAAK,OAAL,AAAY,MAAM,OAAnD,AAA0D,GAAG,AACzD;AACA;mBAAA,AAAO,QAAQ,KAAA,AAAK,WAAW,KAA/B,AAAoC,AACpC;mBAAA,AAAO,SAAS,KAAA,AAAK,WAAW,KAAhC,AAAqC,AACrC;6BAAA,AAAiB,SAAjB,AAA0B,AAE1B;;gBAAI,SAAS,KAAA,AAAK,IAAL,AAAS,MAAM,KAA5B,AAAa,AAAoB,AACjC;iBAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,WAApB,AAA+B,AAC/B;oBAAA,AAAQ,AACR;mBAAA,AAAO,GAAG,EAAE,GAAG,OAAL,AAAY,GAAG,GAAE,OAA3B,AAAU,AAAwB,KAAlC,AAAuC,KAAK,OAAA,AAAO,OAAP,AAAc,SAA1D,AAAmE,AACnE;mBAAA,AAAO,WAAP,AAAkB,IACd,YAAU,AACN;qBAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,WAApB,AAA+B,AAC/B;wBAAA,AAAQ,AACX;AAJL,eAAA,AAIO,AACP;mBAAA,AAAO,AACV;AAED;;YAAG,SAAH,AAAY,QAAO,AACf;kBAAA,AAAM,AACT;AACJ;AACJ;;;AAED,SAAA,AAAS,SAAT,AAAmB,OAAnB,AAA0B,QAAO,AAC7B;WAAO,UAAA,AAAS,cAAT,AAAuB,aAAY,AACtC;eAAA,AAAO,iBAAiB,OAAxB,AAA+B,QAA/B,AAAuC,AACvC;AACA;oBAAA,AAAY,QAAZ,AAAoB,aAAa,OAAjC,AAAwC,AAC3C;AAJD,AAKH;;;AAED,SAAA,AAAS,gBAAT,AAA0B,OAA1B,AAAiC,QAAO,AACpC;WAAO,UAAA,AAAS,cAAT,AAAuB,aAAY,AACtC;eAAO,YAAA,AAAY,eAAZ,AAA2B,aAAa,OAA/C,AAAO,AAA+C,AACzD;AAFD,AAGH;;;AAED,SAAA,AAAS,UAAT,AAAoB,KAApB,AAAyB,QAAO,AAC5B;WAAO,UAAA,AAAS,WAAT,AAAoB,cAAa,AACpC;qBAAA,AAAa,QAAb,AAAqB,cAArB,AAAmC,AACnC;YAAG,OAAO,UAAP,AAAiB,WAApB,AAA+B,YAAW,AACtC;sBAAA,AAAU,QAAV,AAAkB,WAAlB,AAA6B,cAA7B,AAA2C,AAC9C;AACJ;AALD,AAMH;;;AAED,SAAA,AAAS,cAAT,AAAuB,GAAE,AACrB;WAAO,UAAA,AAAS,MAAT,AAAe,MAAK,AACvB;eAAO,EAAA,AAAE,OAAF,AAAS,MAAT,AAAc,MAArB,AAAO,AAAoB,AAC9B;AAFD,AAGH;;;AAED,SAAA,AAAS,SAAQ,AACb;QAAI,SAAS,KAAA,AAAK,IAAL,AAAS,MAAM,KAA5B,AAAa,AAAoB,AACjC;SAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,WAApB,AAA+B,AAC/B;WAAA,AAAO,OAAP,AAAc,UAAd,AAAwB,AACxB;YAAA,AAAQ,AACR;WAAA,AAAO,GAAG,EAAE,GAAG,KAAA,AAAK,OAAL,AAAY,IAA3B,AAAU,AAAqB,OAA/B,AAAsC,MAAM,OAAA,AAAO,OAAP,AAAc,SAA1D,AAAmE,AACnE;WAAA,AAAO,WAAP,AAAkB,IACd,YAAU,AACN;aAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,WAApB,AAA+B,AAC/B;aAAA,AAAK,MAAL,AAAW,MAAX,AAAiB,AACpB;AAJL,OAAA,AAIO,AACP;WAAA,AAAO,AACV;;;AAED,SAAA,AAAS,SAAT,AAAkB,OAAlB,AAAyB,OAAM,AAC3B;UAAA,AAAM,QAAN,AAAc,OAAd,AAAqB,AACxB;;;;;;AC1LD,IAAI;aAAO,AACE,AACT;YAFO,AAEC,AACR;YAHO,AAGC,AACR;YAJJ,AAAW,AAIC;AAJD,AACP;;AAMJ,IAAI,SAAJ,AAAa;IACT,QADJ,AACY;IACR,YAFJ,AAEgB;IACZ,QAHJ,AAGY;IACR,OAJJ,AAIW;IACP,SALJ,AAKa;IACT,UANJ,AAMa;;AAEb,SAAA,AAAS,UAAU,AACf;SAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,QAAhB,AAAwB,AACxB;SAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,QAAhB,AAAwB,AACxB;SAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,QAAhB,AAAwB,AACxB;SAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,QAAhB,AAAwB,AACxB;SAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,SAAhB,AAAyB,AACzB;SAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,YAAhB,AAA4B,AAC5B;SAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,MAAhB,AAAsB,AACtB;SAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,SAAhB,AAAyB,AACzB;SAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,UAAhB,AAA0B,AAC1B;SAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,UAAhB,AAA0B,AAG1B;;SAAA,AAAK,KAAL,AAAU,YAAV,AAAsB,SAAtB,AAA+B,wBAA/B,AAAuD,IAAvD,AAA2D,IAA3D,AAA+D,AAC/D;SAAA,AAAK,KAAL,AAAU,YAAV,AAAsB,SAAtB,AAA+B,wBAA/B,AAAuD,IAAvD,AAA2D,IAA3D,AAA+D,AAC/D;SAAA,AAAK,KAAL,AAAU,YAAV,AAAsB,UAAtB,AAAgC,8BAAhC,AAA8D,IAA9D,AAAkE,IAAlE,AAAsE,AACtE;SAAA,AAAK,KAAL,AAAU,YAAV,AAAsB,UAAtB,AAAgC,8BAAhC,AAA8D,IAA9D,AAAkE,IAAlE,AAAsE,AACtE;SAAA,AAAK,KAAL,AAAU,YAAV,AAAsB,QAAtB,AAA8B,4BAA9B,AAA0D,IAA1D,AAA8D,IAA9D,AAAkE,AAElE;;SAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,QAAhB,AAAwB,AACxB;SAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,QAAhB,AAAwB,AACxB;SAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,QAAhB,AAAwB,AACxB;SAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,QAAhB,AAAwB,AAExB;;SAAA,AAAK,KAAL,AAAU,OAAV,AAAiB,gBAAjB,AAAiC,AAEjC;;aAAS,IAAT,AAAS,AAAI,AACb;WAAA,AAAO,AACP;WAAA,AAAO,AAEP;;YAAA,AAAQ,AAER;;QAAI,OAAO,IAAX,AAAW,AAAI,AACf;QAAI,OAAO,KAAA,AAAK,YAAL,AAAiB,KAAK,KAAtB,AAAsB,AAAK,WAAW,KAAtC,AAAsC,AAAK,aAAa,KAAnE,AAAmE,AAAK,AACxE;SAAA,AAAK,IAAL,AAAS,IAAT,AAAa,AAEhB;;;AAID,SAAA,AAAS,SAAS,AACd;WAAA,AAAO,AACP;SAAA,AAAK,MAAL,AAAW,kBAAX,AAA6B,AAC7B;UAAA,AAAM,AACN;YAAA,AAAQ,AACR;AACA;gBAAY,KAAA,AAAK,IAAjB,AAAY,AAAS,AACrB;WAAO,KAAA,AAAK,IAAZ,AAAO,AAAS,AAChB;aAAS,KAAA,AAAK,IAAd,AAAS,AAAS,AAClB;cAAU,KAAA,AAAK,IAAf,AAAU,AAAS,AACnB;AACA;cAAA,AAAU,aAAV,AAAuB,AACvB;cAAA,AAAU,kBAAkB,OAAA,AAAO,QAAnC,AAA2C,AAC3C;SAAA,AAAK,aAAL,AAAkB,AAClB;WAAA,AAAO,aAAP,AAAoB,AACpB;AACA;YAAA,AAAQ,WAAR,AAAmB,MAAnB,AAAyB,QAAzB,AAAiC,MAAjC,AAAuC,MAAvC,AAA6C,MAA7C,AAAmD,MAAnD,AAAyD,MAAzD,AAA+D,GAA/D,AAAkE,GAAlE,AAAqE,IAArE,AAAyE,IAAzE,AAA6E,AAC7E;SAAA,AAAK,MAAL,AAAW,UAAX,AAAqB,GAArB,AAAwB,GAAxB,AAA2B,KAA3B,AAAiC,AAGjC;;WAAA,AAAO,OAAP,AAAc,KAAd,AAAmB,KAAnB,AAAwB,OAAxB,AAA+B,AAC/B;UAAA,AAAM,AAEN;;QAAI,aAAa,EAAC,MAAD,AAAO,QAAQ,cAAf,AAA6B,UAAU,cAAxD,AAAiB,AAAqD,AAEtE;;QAAI,QAAQ,KAAA,AAAK,IAAL,AAAS,KAAT,AAAc,GAAd,AAAiB,GAAjB,AAAoB,iBAAhC,AAAY,AAAqC,AACjD;UAAA,AAAM,cAAN,AAAoB,GAApB,AAAuB,IAAvB,AAA2B,KAA3B,AAAgC,AAEhC;;QAAI,YAAY,EAAC,MAAD,AAAO,QAAQ,cAAf,AAA6B,UAAU,cAAvC,AAAqD,UAAU,UAA/D,AAAyE,MAAM,UAA/E,AAAwF,MAAM,OAA9G,AAAgB,AAAoG,AAEpH;;QAAI,WAAW,KAAA,AAAK,IAAL,AAAS,KAAT,AAAc,GAAd,AAAgB,GAAhB,AAAmB,iCAAlC,AAAe,AAAoD,AACnE;aAAA,AAAS,cAAT,AAAuB,GAAvB,AAA0B,KAA1B,AAA+B,KAA/B,AAAoC,AAEvC;;;AAED,SAAA,AAAS,SAAQ,AACb;QAAI,aAAa,cAAjB,AAAiB,AAAc,AAC/B;SAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,QAAQ,OAA5B,AAAmC,QAAnC,AAA2C,WAA3C,AAAsD,YAAY,OAAlE,AAAyE,AACzE;SAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,QAAQ,OAA5B,AAAmC,QAAnC,AAA2C,MAAM,OAAjD,AAAwD,AACxD;SAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,QAAQ,OAA5B,AAAmC,QAAnC,AAA2C,QAAQ,OAAnD,AAA0D,AAE1D;;SAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,QAApB,AAA4B,WAA5B,AAAuC,SAAS,UAAA,AAAU,WAA1D,AAAgD,AAAqB,AACrE;QAAI,WAAW,MAAf,AAAe,AAAM,AACrB;WAAA,AAAO,OAAP,AAAc,AACd;YAAA,AAAQ,QAAR,AAAgB,YAAhB,AAA4B,AAC/B;;;AAED,SAAA,AAAS,cAAT,AAAuB,GAAE,AACrB;WAAO,UAAA,AAAS,MAAT,AAAe,MAAK,AACvB;eAAO,EAAA,AAAE,OAAF,AAAS,MAAT,AAAe,MAAtB,AAAO,AAAqB,AAC/B;AAFD,AAGH;;;AAED,SAAA,AAAS,SAAQ,AACb;QAAI,SAAO,KAAA,AAAK,IAAL,AAAS,MAAM,KAA1B,AAAW,AAAoB,AAC/B;WAAA,AAAO,OAAP,AAAc,UAAd,AAAwB,AACxB;WAAA,AAAO,GAAG,EAAE,GAAG,MAAf,AAAU,AAAW,OAArB,AAA4B,MAAM,OAAA,AAAO,OAAP,AAAc,SAAhD,AAAyD,AACzD;WAAA,AAAO,WAAP,AAAkB,IAAI,YAAU,AAAE;aAAA,AAAK,MAAL,AAAW,MAAX,AAAiB,AAAS;AAA5D,OAAA,AAA8D,AAC9D;WAAA,AAAO,AACV;;AACD,SAAA,AAAS,UAAT,AAAoB,KAApB,AAAyB,QAAO,AAC5B;WAAO,UAAA,AAAS,WAAT,AAAoB,cAAa,AACpC;qBAAA,AAAa,QAAb,AAAqB,cAArB,AAAmC,AACtC;AAFD,AAGH;;;;;;ACvHD,IAAI;aAAM,AACG,AACT;YAFM,AAEE,AACR;YAHM,AAGE,AACR;YAJJ,AAAU,AAIE;AAJF,AACN;;AAMJ,IAAI,SAAJ,AAAa;IACT,QADJ,AACY;IACR,YAFJ,AAEgB;IACZ,QAHJ,AAGY;IACR,OAJJ,AAIW;IACP,SALJ,AAKa;IACT,QANJ,AAMY;IACR,UAPJ,AAOc;;AAEd,SAAA,AAAS,UAAU,AACf;aAAS,IAAT,AAAS,AAAI,AACb;WAAA,AAAO,AACP;WAAA,AAAO,AAEP;;YAAA,AAAQ,AACX;;;AAID,SAAA,AAAS,SAAS,AACd;SAAA,AAAK,MAAL,AAAW,kBAAX,AAA6B,AAC7B;UAAA,AAAM,AACN;YAAA,AAAQ,AACR;AACA;gBAAY,KAAA,AAAK,IAAjB,AAAY,AAAS,AACrB;WAAO,KAAA,AAAK,IAAZ,AAAO,AAAS,AAChB;aAAS,KAAA,AAAK,IAAd,AAAS,AAAS,AAClB;cAAU,KAAA,AAAK,IAAf,AAAU,AAAS,AACnB;AACA;cAAA,AAAU,aAAV,AAAuB,AACvB;cAAA,AAAU,kBAAkB,OAAA,AAAO,QAAnC,AAA2C,AAC3C;SAAA,AAAK,aAAL,AAAkB,AAClB;WAAA,AAAO,aAAP,AAAoB,AACpB;AACA;YAAA,AAAQ,WAAR,AAAmB,MAAnB,AAAyB,QAAzB,AAAiC,MAAjC,AAAuC,MAAvC,AAA6C,MAA7C,AAAmD,MAAnD,AAAyD,KAAzD,AAA8D,GAA9D,AAAiE,KAAjE,AAAsE,IAAtE,AAA0E,IAA1E,AAA8E,AAC9E;SAAA,AAAK,MAAL,AAAW,UAAX,AAAqB,GAArB,AAAwB,GAAxB,AAA2B,KAA3B,AAAiC,AAGjC;;WAAA,AAAO,OAAP,AAAc,IAAI,MAAlB,AAAwB,KAAxB,AAA6B,MAA7B,AAAmC,AACnC;UAAA,AAAM,AAEN;;QAAI,WAAW,EAAC,MAAD,AAAO,QAAQ,cAAf,AAA6B,UAAU,cAAtD,AAAe,AAAqD,AAEpE;;QAAI,OAAO,KAAA,AAAK,IAAL,AAAS,KAAT,AAAc,GAAd,AAAiB,GAAG,QAAA,AAAQ,MAA5B,AAAkC,OAA7C,AAAW,AAAyC,AACpD;SAAA,AAAK,cAAL,AAAmB,GAAG,KAAtB,AAA2B,KAA3B,AAAgC,KAAhC,AAAqC,AACrC;AAEA;;QAAI,OAAO,KAAA,AAAK,IAAL,AAAS,KAAT,AAAc,KAAd,AAAmB,GAAG,QAAA,AAAQ,MAA9B,AAAoC,OAA/C,AAAW,AAA2C,AACtD;SAAA,AAAK,cAAL,AAAmB,GAAG,KAAtB,AAA2B,KAA3B,AAAgC,KAAhC,AAAqC,AAErC;;QAAI,SAAS,KAAA,AAAK,IAAL,AAAS,MAAM,KAA5B,AAAa,AAAoB,AACjC;SAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,WAApB,AAA+B,AAC/B;WAAA,AAAO,GAAG,EAAE,GAAZ,AAAU,AAAK,OAAf,AAAsB,MAAM,OAAA,AAAO,OAAP,AAAc,SAA1C,AAAmD,AACnD;WAAA,AAAO,WAAP,AAAkB,IACd,YAAU,AACN;aAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,WAApB,AAA+B,AAC/B;gBAAA,AAAQ,AACX;AAJL,OAAA,AAIO,AACP;WAAA,AAAO,AAEV;;;AAED,SAAA,AAAS,SAAQ,AACb;QAAA,AAAG,OAAM,AACL;YAAI,aAAa,cAAjB,AAAiB,AAAc,AAC/B;aAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,QAAQ,OAA5B,AAAmC,QAAnC,AAA2C,WAA3C,AAAsD,YAAY,OAAlE,AAAyE,AACzE;aAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,QAAQ,OAA5B,AAAmC,QAAnC,AAA2C,MAAM,OAAjD,AAAwD,AACxD;aAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,QAAQ,OAA5B,AAAmC,QAAnC,AAA2C,QAAQ,OAAnD,AAA0D,AAC1D;aAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,QAApB,AAA4B,WAA5B,AAAuC,SAAS,UAAA,AAAU,WAA1D,AAAgD,AAAqB,AACrE;YAAI,WAAW,MAAf,AAAe,AAAM,AACrB;eAAA,AAAO,OAAP,AAAc,AACd;gBAAA,AAAQ,QAAR,AAAgB,YAAhB,AAA4B,AAC/B;AACJ;;;AAED,SAAA,AAAS,cAAT,AAAuB,GAAE,AACrB;WAAO,UAAA,AAAS,MAAT,AAAe,MAAK,AACvB;eAAO,EAAA,AAAE,OAAF,AAAS,MAAT,AAAe,MAAtB,AAAO,AAAqB,AAC/B;AAFD,AAGH;;;AAED,SAAA,AAAS,SAAQ,AACb;QAAI,SAAS,KAAA,AAAK,IAAL,AAAS,MAAM,KAA5B,AAAa,AAAoB,AACjC;WAAA,AAAO,OAAP,AAAc,UAAd,AAAwB,AACxB;SAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,WAApB,AAA+B,AAC/B;WAAA,AAAO,GAAG,EAAE,GAAG,MAAf,AAAU,AAAW,OAArB,AAA4B,MAAM,OAAA,AAAO,OAAP,AAAc,SAAhD,AAAyD,AACzD;WAAA,AAAO,WAAP,AAAkB,IACd,YAAU,AACN;aAAA,AAAK,QAAL,AAAa,OAAb,AAAoB,WAApB,AAA+B,AAC/B;aAAA,AAAK,MAAL,AAAW,MAAX,AAAiB,AACpB;AAJL,OAAA,AAIO,AACP;WAAA,AAAO,AACV;;;AAED,SAAA,AAAS,UAAT,AAAoB,KAApB,AAAyB,QAAO,AAC5B;WAAO,UAAA,AAAS,WAAT,AAAoB,cAAa,AACpC;qBAAA,AAAa,QAAb,AAAqB,cAArB,AAAmC,AACtC;AAFD,AAGH;;;;;;ACzGD,IAAI,QAAQ,SAAR,AAAQ,QAAU,AAClB;QAAI,QAAJ,AAAY,AAEZ;;UAAA,AAAM,SAAN,AAAe,MACf,MAAA,AAAM,QADN,AACc,MACd,MAAA,AAAM,MAFN,AAEY,MACZ,MAAA,AAAM,QAHN,AAGc,MACd,MAAA,AAAM,OAJN,AAIa,AACb;UAAA,AAAM,aAAN,AAAmB,AACnB;UAAA,AAAM,YAAN,AAAkB,AAClB;UAAA,AAAM,kBAAN,AAAwB,AAIxB;;aAAA,AAAS,aAAY,AACjB;YAAG,MAAA,AAAM,WAAT,AAAoB,MAAK,AACrB;AACH;AAED;;YAAI;AAEA;wBAAY,EAAC,MAAD,AAAO,MAAM,OAAO,EAAE,GAAG,MAAL,AAAS,KAAK,GAAG,MAAjB,AAAqB,KAAK,GAAG,MAFlD,AAEC,AAAoB,AAAiC,AACjE;+BAAmB,EAAC,MAAD,AAAO,MAAM,OAAO,EAAE,GAAG,MAAA,AAAM,MAAN,AAAY,IAAjB,AAAmB,KAAK,GAAG,MAAA,AAAM,MAAN,AAAY,IAAvC,AAAyC,KAAK,GAAG,MAAA,AAAM,MAAN,AAAY,IAHzF,AAGQ,AAAoB,AAA+D,AACtG;AACA;wBAAY,EAAC,MAAD,AAAO,MAAM,OAAO,EAAE,GAAG,MAAL,AAAS,KAAK,GAAG,KAAjB,AAAoB,KAAK,GAAG,KALjD,AAKC,AAAoB,AAA+B,AAC/D;+BAAmB,EAAC,MAAD,AAAO,MAAM,OAAO,EAAE,GAAG,MAAA,AAAM,IAAN,AAAU,IAAf,AAAiB,KAAK,GAAG,MAAA,AAAM,IAAN,AAAU,IAAnC,AAAqC,KAAK,GAAG,MAAA,AAAM,IAAN,AAAU,IANnF,AAMQ,AAAoB,AAAyD,AAChG;AACA;wBAAY,EAAC,MAAD,AAAO,MAAM,OAAO,EAAE,GAAG,KAAL,AAAQ,KAAK,GAAG,IAAhB,AAAkB,KAAK,GAAG,KAR/C,AAQC,AAAoB,AAA6B,AAC7D;+BAAmB,EAAC,MAAD,AAAO,MAAM,OAAO,EAAE,GAAG,MAAA,AAAM,MAAN,AAAY,IAAjB,AAAmB,KAAK,GAAG,MAAA,AAAM,MAAN,AAAY,IAAvC,AAAyC,KAAK,GAAG,MAAA,AAAM,MAAN,AAAY,IATzF,AASQ,AAAoB,AAA+D,AACtG;AACA;wBAAY,EAAC,MAAD,AAAO,MAAM,OAAO,EAAE,GAAG,KAAL,AAAQ,KAAK,GAAG,KAAhB,AAAmB,KAAK,GAAG,KAXhD,AAWC,AAAoB,AAA8B,AAC9D;+BAAmB,EAAC,MAAD,AAAO,MAAM,OAAO,EAAE,GAAG,MAAA,AAAM,KAAN,AAAW,IAAhB,AAAkB,KAAK,GAAG,MAAA,AAAM,KAAN,AAAW,IAArC,AAAuC,KAAK,GAAG,MAAA,AAAM,KAAN,AAAW,IAZrG,AAAe,AAYQ,AAAoB,AAA4D,AAEvG;AAde,AACX;cAaJ,AAAM,SAAS,IAAI,OAAJ,AAAW,OAAX,AAAkB,MAAlB,AAAwB,UAAU,KAAA,AAAK,MAAL,AAAW,UAA5D,AAAe,AAAkC,AAAqB,AACtE;AACA;aAAA,AAAK,MAAL,AAAW,UAAU,CAAC,MAAtB,AAAqB,AAAO,AAC5B;YAAI,QAAQ,OAAA,AAAO,MAAP,AAAa,WAAb,AAAwB,GAAG,MAAA,AAAM,MAAjC,AAAuC,GAAG,MAAA,AAAM,MAAhD,AAAsD,GAAG,MAAA,AAAM,MAA3E,AAAY,AAAqE,AACjF;aAAA,AAAK,MAAL,AAAW,kBAAX,AAA6B,AAChC;AAGD;;aAAA,AAAS,UAAT,AAAmB,OAAnB,AAA0B,KAA1B,AAA+B,OAA/B,AAAsC,MAAK,AACvC;AACA;AACA;AACA;AACA;cAAA,AAAM,QAAN,AAAc,AACd;cAAA,AAAM,MAAN,AAAY,AACZ;cAAA,AAAM,QAAN,AAAc,AACd;cAAA,AAAM,OAAN,AAAa,AACb;YAAI;AAEA;wBAAY,EAAC,MAAD,AAAO,MAAM,OAAO,EAAE,GAAG,MAAL,AAAS,KAAK,GAAG,MAAjB,AAAqB,KAAK,GAAG,MAFlD,AAEC,AAAoB,AAAiC,AACjE;+BAAmB,EAAC,MAAD,AAAO,MAAM,OAAO,EAAE,GAAG,MAAA,AAAM,IAAX,AAAa,KAAK,GAAG,MAAA,AAAM,IAA3B,AAA6B,KAAK,GAAG,MAAA,AAAM,IAHvE,AAGQ,AAAoB,AAA6C,AACpF;AACA;wBAAY,EAAC,MAAD,AAAO,MAAM,OAAO,EAAE,GAAG,MAAL,AAAS,KAAK,GAAG,KAAjB,AAAoB,KAAK,GAAG,KALjD,AAKC,AAAoB,AAA+B,AAC/D;+BAAmB,EAAC,MAAD,AAAO,MAAM,OAAO,EAAE,GAAG,IAAA,AAAI,IAAT,AAAW,KAAK,GAAG,IAAA,AAAI,IAAvB,AAAyB,KAAK,GAAG,IAAA,AAAI,IANjE,AAMQ,AAAoB,AAAuC,AAC9E;AACA;wBAAY,EAAC,MAAD,AAAO,MAAM,OAAO,EAAE,GAAG,KAAL,AAAQ,KAAK,GAAG,IAAhB,AAAkB,KAAK,GAAG,KAR/C,AAQC,AAAoB,AAA6B,AAC7D;+BAAmB,EAAC,MAAD,AAAO,MAAM,OAAO,EAAE,GAAG,MAAA,AAAM,IAAX,AAAa,KAAK,GAAG,MAAA,AAAM,IAA3B,AAA6B,KAAK,GAAG,MAAA,AAAM,IATvE,AASQ,AAAoB,AAA6C,AACpF;AACA;wBAAY,EAAC,MAAD,AAAO,MAAM,OAAO,EAAE,GAAG,KAAL,AAAQ,KAAK,GAAG,KAAhB,AAAmB,KAAK,GAAG,KAXhD,AAWC,AAAoB,AAA8B,AAC9D;+BAAmB,EAAC,MAAD,AAAO,MAAM,OAAO,EAAE,GAAG,KAAA,AAAK,IAAV,AAAY,KAAK,GAAG,KAAA,AAAK,IAAzB,AAA2B,KAAK,GAAG,KAAA,AAAK,IAZnF,AAAe,AAYQ,AAAoB,AAA0C,AAErF;AAde,AACX;cAaJ,AAAM,SAAS,IAAI,OAAJ,AAAW,OAAX,AAAkB,MAAlB,AAAwB,UAAU,KAAA,AAAK,MAAL,AAAW,UAA5D,AAAe,AAAkC,AAAqB,AACtE;AACA;aAAA,AAAK,MAAL,AAAW,UAAU,CAAC,MAAtB,AAAqB,AAAO,AAC5B;YAAI,QAAQ,OAAA,AAAO,MAAP,AAAa,WAAb,AAAwB,GAAG,MAA3B,AAAiC,GAAG,MAApC,AAA0C,GAAG,MAAzD,AAAY,AAAmD,AAC/D;aAAA,AAAK,MAAL,AAAW,kBAAX,AAA6B,AAChC;AAGD;;aAAA,AAAS,kBAAiB,AACtB;YAAI,IAAI,EAAC,GAAE,KAAA,AAAK,IAAL,AAAS,eAAT,AAAwB,GAA3B,AAAG,AAA0B,MAAK,GAAE,KAAA,AAAK,IAAL,AAAS,eAAT,AAAwB,GAA5D,AAAoC,AAA0B,MAAK,GAAE,KAAA,AAAK,IAAL,AAAS,eAAT,AAAwB,GAArG,AAAQ,AAAqE,AAA0B,AACvG;YAAI,IAAI,EAAC,GAAE,KAAA,AAAK,IAAL,AAAS,eAAT,AAAwB,GAA3B,AAAG,AAA0B,MAAK,GAAE,KAAA,AAAK,IAAL,AAAS,eAAT,AAAwB,GAA5D,AAAoC,AAA0B,MAAK,GAAE,KAAA,AAAK,IAAL,AAAS,eAAT,AAAwB,GAArG,AAAQ,AAAqE,AAA0B,AACvG;YAAI,IAAI,EAAC,GAAE,KAAA,AAAK,IAAL,AAAS,eAAT,AAAwB,GAA3B,AAAG,AAA0B,MAAK,GAAE,KAAA,AAAK,IAAL,AAAS,eAAT,AAAwB,GAA5D,AAAoC,AAA0B,MAAK,GAAE,KAAA,AAAK,IAAL,AAAS,eAAT,AAAwB,GAArG,AAAQ,AAAqE,AAA0B,AACvG;YAAI,IAAI,EAAC,GAAE,KAAA,AAAK,IAAL,AAAS,eAAT,AAAwB,GAA3B,AAAG,AAA0B,MAAK,GAAE,KAAA,AAAK,IAAL,AAAS,eAAT,AAAwB,GAA5D,AAAoC,AAA0B,MAAK,GAAE,KAAA,AAAK,IAAL,AAAS,eAAT,AAAwB,GAArG,AAAQ,AAAqE,AAA0B,AACvG;kBAAA,AAAU,GAAV,AAAa,GAAb,AAAgB,GAAhB,AAAmB,AACtB;AACJ;AA/ED;;;;;ACAA,IAAI,SAAS,SAAT,AAAS,SAAU,AACnB;QAAI,QAAJ,AAAY,AAEZ;;UAAA,AAAM,UAAN,AAAgB,AAEhB;;UAAA,AAAM,QAAN,AAAc,AACd;UAAA,AAAM,KAAN,AAAW,AACX;UAAA,AAAM,gBAAN,AAAsB,AACtB;UAAA,AAAM,aAAN,AAAmB,AAGnB;;UAAA,AAAM,UAAU,SAAA,AAAS,UAAS,AAC9B;cAAA,AAAM,QAAQ,MAAd,AAAoB,AACpB;cAAA,AAAM,KAAK,MAAX,AAAiB,AAEjB;;cAAA,AAAM,aAAa,IAAI,OAAvB,AAAmB,AAAW,AAEjC;AAND,AAQA;;UAAA,AAAM,WAAW,SAAA,AAAS,WAAU,AAChC;AACA;cAAA,AAAM,gBAAgB,KAAA,AAAK,IAA3B,AAAsB,AAAS,AAC/B;cAAA,AAAM,cAAN,AAAoB,IAApB,AAAwB,AACxB;cAAA,AAAM,cAAN,AAAoB,IAApB,AAAwB,AACxB;cAAA,AAAM,cAAN,AAAoB,gBAApB,AAAoC,AACpC;aAAI,IAAI,IAAR,AAAY,GAAG,IAAI,MAAnB,AAAyB,IAAzB,AAA6B,KAAI,AAC7B;AACH;AACJ;AATD,AAWA;;aAAA,AAAS,iBAAgB,AACrB;YAAI,MAAM,MAAA,AAAM,cAAhB,AAA8B,AAC9B;cAAA,AAAM,cAAN,AAAoB,OAAO,MAAA,AAAM,cAAjC,AAA+C,GAAG,MAAA,AAAM,cAAN,AAAoB,IAAK,MAA3E,AAAiF,GAAjF,AAAqF,AACrF;AACH;AAED;;aAAA,AAAS,gBAAT,AAAyB,OAAzB,AAAgC,SAAQ,AACpC;YAAG,MAAA,AAAM,cAAT,AAAuB,UAAS,AAC5B;kBAAA,AAAM,cAAN,AAAoB,SAApB,AAA6B,OAA7B,AAAoC,UAApC,AAA8C,AACjD;AACJ;AAED;;UAAA,AAAM,QAAQ,SAAA,AAAS,MAAT,AAAgB,OAAM,AAChC;YAAI,OAAO,QAAQ,MAAnB,AAAyB,AACzB;YAAI,WAAW,OAAf,AAAsB,AACtB;cAAA,AAAM,KAAN,AAAW,AACX;AACA;YAAG,MAAA,AAAM,MAAM,MAAf,AAAqB,OAAM,AACvB;kBAAA,AAAM,KAAK,MAAX,AAAiB,AACjB;iBAAI,IAAI,IAAR,AAAY,GAAI,IAAI,MAAA,AAAM,cAA1B,AAAwC,UAAxC,AAAkD,KAAI,AAClD;gCAAA,AAAgB,GAAhB,AAAmB,AACtB;AACJ;AALD,mBAMQ,MAAA,AAAM,KAAT,AAAc,GAAE,AACjB;iBAAI,IAAI,IAAI,KAAA,AAAK,IAAjB,AAAY,AAAS,OAAO,IAA5B,AAAgC,GAAhC,AAAmC,KAAI,AACnC;gCAAgB,MAAA,AAAM,KAAM,KAAK,WAAA,AAAW,IAAI,CAAhC,AAAY,AAAqB,KAAjD,AAAuD,GAAvD,AAA0D,AAC7D;AACJ;AAJI,SAAA,MAKD,AACA;iBAAI,IAAI,IAAR,AAAY,GAAI,IAAI,MAAA,AAAM,cAA1B,AAAwC,UAAxC,AAAkD,KAAI,AAClD;gCAAA,AAAgB,GAAhB,AAAmB,AACtB;AACD;AACH;AACJ;AAtBD,AAwBA;;UAAA,AAAM,UAAU,SAAA,AAAS,QAAT,AAAiB,KAAI,AACjC;cAAA,AAAM,MAAM,MAAA,AAAM,KAAlB,AAAuB,AAC1B;AAFD,AAIA;;UAAA,AAAM,SAAS,SAAA,AAAS,OAAT,AAAgB,MAAK,AAChC;cAAA,AAAM,MAAM,MAAA,AAAM,KAAlB,AAAuB,AAC1B;AAFD,AAIA;;aAAA,AAAS,eAAc,AACnB;AACA;AACA;AACA;aAAA,AAAK,MAAL,AAAW,MAAX,AAAiB,AACpB;AACJ;AAhFD",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import GameState from 'states/game';\nimport MenuState from 'states/menu';\nimport MidLevelState from 'states/midLevel';\nimport Color from 'util/Color';\nimport Health from 'util/playerHealth';\n\nclass Game extends Phaser.Game {\n\n\tconstructor() {\n\t\tsuper(512, 288, Phaser.AUTO, 'content', null);\n\t\tthis.antialias = false;\n\t\tthis.world = 1;\n\t\tthis.level = 1;\n\t\tthis.color = new Color();\n\t\tthis.health = new Health();\n\t\tthis.state.add('Game', GameState, false);\n\t\tthis.state.add('Menu', MenuState, false);\n\t\tthis.state.add('Mid', MidLevelState, false);\n\t\tthis.state.start('Menu');\n\t}\n\n}\n\nnew Game();\n",
    "var Game = {\n    preload: preload,\n    create: create,\n    update: update,\n    onExit: onExit\n};\n\nvar player = null,\n    input = null,\n    platforms = null,\n    level = null,\n    door = null,\n    spikes = null,\n    ghost = null,\n    goose = null,\n    bg = null,\n    roomChangedEvent = null,\n    ready = false,\n    bullets = null;\n\nfunction preload() {\n    player = new Player();\n    player.init(game);\n    player.preload();\n    \n    input = Input;\n}\n\n\n\nfunction create() {\n    game.stage.backgroundColor = \"#0E0518\";\n    color.initColors();\n    ready = false;\n    game.stage.smoothed = false;\n    roomChangedEvent = new Phaser.Signal();\n    //game.stage.backgroundColor = \"#0E0518\";\n    \n    input.create();\n    //  The platforms group contains the ground and the 2 ledges we can jump on\n    bg = game.add.group(); //backgound stuff \n    platforms = game.add.group();\n    door = game.add.group();\n    spikes = game.add.group();\n    bullets = game.add.group();\n    //  We will enable physics for any object that is created in this group\n    platforms.enableBody = true;\n    door.enableBody = true;\n    spikes.enableBody = true;\n    \n    goose = game.add.group();\n    ghost = game.add.group();\n    \n    var roomsWide = 6;\n    var roomsHigh = 3;\n    var startRoom = 1; //0<->roomshigh-1\n    \n    //for calculations & roomGen\n    game.tileSize = 32; //adjust if needed\n    game.roomCols = 16;\n    game.roomRows = 9;\n    \n    levelGen(roomsHigh, roomsWide, startRoom, 2, 1, 1, platforms, door, spikes, goose, ghost, bg, game, roomChangedEvent);\n    game.world.setBounds(0, 0, game.tileSize * game.roomCols * (roomsWide +1), game.tileSize * game.roomCols * (roomsHigh + 1));\n    \n    \n    player.create(48, (startRoom * game.roomRows * game.tileSize) + (game.tileSize * (game.roomRows-2)), true, bullets);\n    game.camera.x = 0; //roomCols * tileSize / 2;\n    game.camera.y = 0; //288\n    //game.camera.follow(player.sprite, Phaser.Camera.FOLLOW_PLATFORMER);\n    \n    \n    // var b = {r:45,g:136,b:45};\n    // var w = {r:34,g:102,b:102};\n    // var r = {r:170,g:108,b:57};\n    // var g = {r:170,g:57,b:57};\n    // setColors(w, r, b, g);\n    \n    var bounce = game.add.tween(game.camera);\n    game.physics.arcade.isPaused = true;\n    bounce.to({ y: 288 }, 1000, Phaser.Easing.Circular.Out);\n    bounce.onComplete.add(\n        function(){ \n            game.physics.arcade.isPaused = false; \n            ready = true;\n            roomChangedEvent.dispatch({x:game.camera.x, y:game.camera.y, width: game.tileSize * game.roomCols, height:game.tileSize * game.roomRows});\n        }, this);\n    bounce.start();\n}\n\nfunction update(){\n    if(ready){\n        var playerLand = onLandClosure(player);\n        var gooseHit = enemyHit(goose, player);\n        game.physics.arcade.collide(player.sprite, platforms, playerLand, player.preLand);\n        game.physics.arcade.overlap(player.sprite, door, player.collideWithDoor);\n        game.physics.arcade.collide(player.sprite, spikes, player.collideWithSpike);\n        \n        game.physics.arcade.collide(goose, platforms, hitGoose);\n        \n        game.physics.arcade.collide(ghost, player.sprite, enemyHit(ghost, player), processEnemyHit(ghost, player));\n        game.physics.arcade.collide(goose, player.sprite, gooseHit);\n        \n        game.physics.arcade.collide(platforms, bullets, bulletHit(platforms, bullets));\n        game.physics.arcade.collide(goose, bullets, bulletHit(goose, bullets));\n        game.physics.arcade.collide(ghost, bullets, bulletHit(ghost, bullets));\n        \n        goose.callAll('doUpdate', null);\n        ghost.callAll('doUpdate', null, player.sprite.x, player.sprite.y, player.sprite.scale.x);\n        bullets.callAll('doUpdate', null);\n        \n        \n        var commands = input.update();\n        player.update(commands);\n        var newLoc = player.getCurrentRoomXY();\n        \n            \n        if(game.camera.x !== newLoc.x || game.camera.y !== newLoc.y ){\n            //broadcast room changed event\n            newLoc.width = game.tileSize * game.roomCols;\n            newLoc.height = game.tileSize * game.roomRows;\n            roomChangedEvent.dispatch(newLoc);\n            \n            var bounce = game.add.tween(game.camera);\n            game.physics.arcade.isPaused = true;\n            ready = false;\n            bounce.to({ y: newLoc.y, x:newLoc.x }, 200, Phaser.Easing.Circular.InOut);\n            bounce.onComplete.add(\n                function(){\n                    game.physics.arcade.isPaused = false;\n                    ready = true;\n                }, this);\n            bounce.start();\n        }\n        \n        if(commands.colors){\n            color.setRandomColors();\n        }\n    }\n}\n\nfunction enemyHit (enemy, player){\n    return function(playerSprite, enemySprite){\n        player.collideWithEnemy(player.sprite, enemySprite);\n        //get the specific child somehow\n        enemySprite.collide(enemySprite, player.sprite);\n    }\n}\n\nfunction processEnemyHit (enemy, player){\n    return function(playerSprite, enemySprite){\n        return enemySprite.processCollide(enemySprite, player.sprite);\n    }\n}\n\nfunction bulletHit (obj, bullet){\n    return function(objSprite, bulletSprite){\n        bulletSprite.collide(bulletSprite, objSprite);\n        if(typeof objSprite.collide == 'function'){\n            objSprite.collide(objSprite, bulletSprite, true)\n        }\n    }\n}\n\nfunction onLandClosure(p){\n    return function(col1, col2){\n        return p.onLand(col1,col2, p);\n    }\n}\n\nfunction onExit(){\n    var bounce = game.add.tween(game.camera);\n    game.physics.arcade.isPaused = true;\n    player.sprite.visible = false;\n    ready = false;\n    bounce.to({ y: game.camera.y + 288 }, 1000, Phaser.Easing.Circular.In);\n    bounce.onComplete.add(\n        function(){\n            game.physics.arcade.isPaused = false;\n            game.state.start('Mid');\n        }, this);\n    bounce.start();\n}\n\nfunction hitGoose(goose, other){\n    goose.collide(goose, other);\n}",
    "var Menu = {\n    preload: preload,\n    create: create,\n    update: update,\n    onExit: onExit\n};\n\nvar player = null,\n    input = null,\n    platforms = null,\n    level = null,\n    door = null,\n    spikes = null,\n    bullets= null;\n\nfunction preload() {\n    game.load.image('tile', 'assets/img/tile.png');\n    game.load.image('door', 'assets/img/door.png');\n    game.load.image('tile', 'assets/img/tile.png');\n    game.load.image('door', 'assets/img/door.png');\n    game.load.image('spike', 'assets/img/spike.png');\n    game.load.image('particle', 'assets/img/particle.png');\n    game.load.image('hp', 'assets/img/healthBlock.png');\n    game.load.image('shelf', 'assets/img/shelf.png');\n    game.load.image('window', 'assets/img/window.png');\n    game.load.image('bgdoor', 'assets/img/bgdoor.png');\n    \n    \n    game.load.spritesheet('goose', 'assets/img/goose.png', 32, 32, 4);\n    game.load.spritesheet('ghost', 'assets/img/ghost.png', 32, 32, 2);\n    game.load.spritesheet('player', 'assets/img/playersheet.png', 32, 32, 32);\n    game.load.spritesheet('bullet', 'assets/img/bulletsheet.png', 32, 32, 18);\n    game.load.spritesheet('xplo', 'assets/img/explosion.png', 32, 32, 8);\n    \n    game.load.audio('jump', 'assets/sounds/effects/jump.wav');\n    game.load.audio('land', 'assets/sounds/effects/land.wav');\n    game.load.audio('step', 'assets/sounds/effects/step.wav');\n    game.load.audio('ouch', 'assets/sounds/effects/dmg.wav');\n    \n    game.load.shader('ColorReplace', 'assets/shaders/ColorReplaceFilter.frag');\n    \n    player = new Player();\n    player.init();\n    player.preload();\n    \n    input = Input;\n    \n    var date = new Date();\n    var seed = date.getDate() + '' + date.getDay() + date.getHours() + date.getMilliseconds();\n    game.rnd.sow(seed)\n\n}\n\n\n\nfunction create() {\n    health.resetHp();\n    game.stage.backgroundColor = \"#0E0518\";\n    color.initColors();\n    ready = false;\n    //  The platforms group contains the ground and the 2 ledges we can jump on\n    platforms = game.add.group();\n    door = game.add.group();\n    spikes = game.add.group();\n    bullets = game.add.group();\n    //  We will enable physics for any object that is created in this group\n    platforms.enableBody = true;\n    platforms.physicsBodyType = Phaser.Physics.ARCADE;\n    door.enableBody = true;\n    spikes.enableBody = true;\n    //generate the menu room\n    roomGen(platforms, door, spikes, null, null, null, 'ME', 'NU', 0, 0, 32, 16, 9);\n    game.world.setBounds(0, 0, 512 , 1024);\n    \n    \n    player.create(256, 144, false, bullets);\n    input.create();\n    \n    var titleStyle = {fill: \"#fff\", boundsAlignH: \"center\", boundsAlignV: \"middle\"};\n\n    var title = game.add.text(0, 0, \"Cursed Castle\", titleStyle);\n    title.setTextBounds(0, 77, 512, 77);\n    \n    var descStyle = {fill: \"#fff\", boundsAlignH: \"center\", boundsAlignV: \"middle\", fontSize: \"16\", wordWrap:true, align:'center'};\n    \n    var doorDesc = game.add.text(0,0, \"Press down or S Here to Enter\", descStyle);\n    doorDesc.setTextBounds(0, 100, 225, 100);\n    \n}\n\nfunction update(){\n    var playerLand = onLandClosure(player);\n    game.physics.arcade.collide(player.sprite, platforms, playerLand, player.preLand);\n    game.physics.arcade.overlap(player.sprite, door, player.collideWithDoor);\n    game.physics.arcade.collide(player.sprite, spikes, player.collideWithSpike);\n        \n    game.physics.arcade.collide(platforms, bullets, bulletHit(platforms, bullets));\n    var commands = input.update();\n    player.update(commands);\n    bullets.callAll('doUpdate', null);\n}\n\nfunction onLandClosure(p){\n    return function(col1, col2){\n        return p.onLand(col1, col2, p);\n    }\n}\n\nfunction onExit(){\n    var bounce=game.add.tween(game.camera);\n    player.sprite.visible = false;\n    bounce.to({ y: 288 + 288 }, 1000, Phaser.Easing.Circular.In);\n    bounce.onComplete.add(function(){ game.state.start('Game');}, this);\n    bounce.start();\n}\nfunction bulletHit (obj, bullet){\n    return function(objSprite, bulletSprite){\n        bulletSprite.collide(bulletSprite, objSprite);\n    }\n}",
    "var Mid = {\n    preload: preload,\n    create: create,\n    update: update,\n    onExit: onExit\n};\n\nvar player = null,\n    input = null,\n    platforms = null,\n    level = null,\n    door = null,\n    spikes = null,\n    ready = false,\n    bullets = null;\n\nfunction preload() {\n    player = new Player();\n    player.init();\n    player.preload();\n    \n    input = Input;\n}\n\n\n\nfunction create() {\n    game.stage.backgroundColor = \"#0E0518\";\n    color.initColors();\n    ready = false;\n    //  The platforms group contains the ground and the 2 ledges we can jump on\n    platforms = game.add.group();\n    door = game.add.group();\n    spikes = game.add.group();\n    bullets = game.add.group();\n    //  We will enable physics for any object that is created in this group\n    platforms.enableBody = true;\n    platforms.physicsBodyType = Phaser.Physics.ARCADE;\n    door.enableBody = true;\n    spikes.enableBody = true;\n    //generate the menu room\n    roomGen(platforms, door, spikes, null, null, null, 'MI', 'D', 0, 288, 32, 16, 9);\n    game.world.setBounds(0, 0, 512 , 900);\n    \n    \n    player.create(80, 224 + 288, true, bullets);\n    input.create();\n    \n    var lvlStyle = {fill: \"#fff\", boundsAlignH: \"center\", boundsAlignV: \"middle\"};\n\n    var prev = game.add.text(0, 0, world + '-' + level, lvlStyle);\n    prev.setTextBounds(0, 77 + 288, 256, 77);\n    level++;\n\n    var next = game.add.text(256, 0, world + '-' + level, lvlStyle);\n    next.setTextBounds(0, 77 + 288, 256, 77);\n    \n    var bounce = game.add.tween(game.camera);\n    game.physics.arcade.isPaused = true;\n    bounce.to({ y: 288 }, 1000, Phaser.Easing.Circular.Out);\n    bounce.onComplete.add(\n        function(){ \n            game.physics.arcade.isPaused = false; \n            ready = true;\n        }, this);\n    bounce.start();\n    \n}\n\nfunction update(){\n    if(ready){\n        var playerLand = onLandClosure(player);\n        game.physics.arcade.collide(player.sprite, platforms, playerLand, player.preLand);\n        game.physics.arcade.overlap(player.sprite, door, player.collideWithDoor);\n        game.physics.arcade.collide(player.sprite, spikes, player.collideWithSpike);\n        game.physics.arcade.collide(platforms, bullets, bulletHit(platforms, bullets));\n        var commands = input.update();\n        player.update(commands);\n        bullets.callAll('doUpdate', null);\n    }\n}\n\nfunction onLandClosure(p){\n    return function(col1, col2){\n        return p.onLand(col1, col2, p);\n    }\n}\n\nfunction onExit(){\n    var bounce = game.add.tween(game.camera);\n    player.sprite.visible = false;\n    game.physics.arcade.isPaused = true;\n    bounce.to({ y: 288 + 288 }, 1000, Phaser.Easing.Circular.In);\n    bounce.onComplete.add(\n        function(){\n            game.physics.arcade.isPaused = false;\n            game.state.start('Game');\n        }, this);\n    bounce.start();\n}\n\nfunction bulletHit (obj, bullet){\n    return function(objSprite, bulletSprite){\n        bulletSprite.collide(bulletSprite, objSprite);\n    }\n}",
    "var Color = function(){\n    var _this = this;\n    \n    _this.filter = null,\n    _this.white = null,\n    _this.red = null,\n    _this.black = null,\n    _this.grey = null;\n    _this.initColors = initColors;\n    _this.setColors = setColors;\n    _this.setRandomColors = setRandomColors;\n    \n    \n    \n    function initColors(){\n        if(_this.filter === null){\n            return;\n        }\n        \n        var uniforms = {\n            //white\n            findColor1: {type: '3f', value: { x: 186/255, y: 213/255, z: 219/255 }},\n            replaceWithColor1: {type: '3f', value: { x: _this.white.r/255, y: _this.white.g/255, z: _this.white.b/255 }},\n            //red\n            findColor2: {type: '3f', value: { x: 194/255, y: 14/255, z: 14/255 }},\n            replaceWithColor2: {type: '3f', value: { x: _this.red.r/255, y: _this.red.g/255, z: _this.red.b/255 }},\n            //black\n            findColor3: {type: '3f', value: { x: 14/255, y: 5/255, z: 24/255 }},\n            replaceWithColor3: {type: '3f', value: { x: _this.black.r/255, y: _this.black.g/255, z: _this.black.b/255 }},\n            //grey\n            findColor4: {type: '3f', value: { x: 80/255, y: 80/255, z: 80/255 }},\n            replaceWithColor4: {type: '3f', value: { x: _this.grey.r/255, y: _this.grey.g/255, z: _this.grey.b/255 }},\n        };\n        _this.filter = new Phaser.Filter(game, uniforms, game.cache.getShader('ColorReplace'));\n        //console.log(filter);\n        game.world.filters = [_this.filter];\n        var color = Phaser.Color.getColor32(1, _this.black.r, _this.black.g, _this.black.b)\n        game.stage.backgroundColor = color;\n    }\n    \n    \n    function setColors(white, red, black, grey){\n        //{ x: 14/255, y: 5/255, z: 24/255 } black\n        //{ x: 194/255, y: 14/255, z: 14/255 } red\n        //{ x: 80/255, y: 80/255, z: 80/255 } grey\n        //{ x: 186/255, y: 213/255, z: 219/255 } white\n        _this.white = white;\n        _this.red = red;\n        _this.black = black;\n        _this.grey = grey;\n        var uniforms = {\n            //white\n            findColor1: {type: '3f', value: { x: 186/255, y: 213/255, z: 219/255 }},\n            replaceWithColor1: {type: '3f', value: { x: white.r/255, y: white.g/255, z: white.b/255 }},\n            //red\n            findColor2: {type: '3f', value: { x: 194/255, y: 14/255, z: 14/255 }},\n            replaceWithColor2: {type: '3f', value: { x: red.r/255, y: red.g/255, z: red.b/255 }},\n            //black\n            findColor3: {type: '3f', value: { x: 14/255, y: 5/255, z: 24/255 }},\n            replaceWithColor3: {type: '3f', value: { x: black.r/255, y: black.g/255, z: black.b/255 }},\n            //grey\n            findColor4: {type: '3f', value: { x: 80/255, y: 80/255, z: 80/255 }},\n            replaceWithColor4: {type: '3f', value: { x: grey.r/255, y: grey.g/255, z: grey.b/255 }},\n        };\n        _this.filter = new Phaser.Filter(game, uniforms, game.cache.getShader('ColorReplace'));\n        //console.log(filter);\n        game.world.filters = [_this.filter];\n        var color = Phaser.Color.getColor32(1, black.r, black.g, black.b)\n        game.stage.backgroundColor = color;\n    }\n    \n    \n    function setRandomColors(){\n        var b = {r:game.rnd.integerInRange(0,255),g:game.rnd.integerInRange(0,255),b:game.rnd.integerInRange(0,255)};\n        var w = {r:game.rnd.integerInRange(0,255),g:game.rnd.integerInRange(0,255),b:game.rnd.integerInRange(0,255)};\n        var r = {r:game.rnd.integerInRange(0,255),g:game.rnd.integerInRange(0,255),b:game.rnd.integerInRange(0,255)};\n        var g = {r:game.rnd.integerInRange(0,255),g:game.rnd.integerInRange(0,255),b:game.rnd.integerInRange(0,255)};\n        setColors(w, r, b, g);\n    }\n};\n",
    "var Health = function(){\n    var _this = this;\n    \n    _this.startHp = 8;\n    \n    _this.maxHp = 8;\n    _this.hp = 8;\n    _this.healthSprites = null;\n    _this.deathEvent = null;\n    \n    \n    _this.resetHp = function resetHp(){\n        _this.maxHp = _this.startHp;\n        _this.hp = _this.startHp;\n        \n        _this.deathEvent = new Phaser.Signal();\n        \n    }\n    \n    _this.newScene = function newScene(){\n        //sprites\n        _this.healthSprites = game.add.group();\n        _this.healthSprites.x = 24;\n        _this.healthSprites.y = 96;\n        _this.healthSprites.fixedToCamera = true;\n        for(var i = 0; i < _this.hp; i++){\n            addToHealthBar();\n        }\n    }\n    \n    function addToHealthBar(){\n        var len = _this.healthSprites.length;\n        _this.healthSprites.create(_this.healthSprites.x, _this.healthSprites.y - (len * 8), 'hp');\n        //_this.healthSprites.y += 8;\n    }\n    \n    function changeHealthBar(index, visible){\n        if(_this.healthSprites.children){\n            _this.healthSprites.children[index].visible = visible;\n        }\n    }\n    \n    _this.setHp = function setHp (newHp){\n        var diff = newHp - _this.hp;\n        var positive = diff > 0;\n        _this.hp = newHp;\n        //change sprites\n        if(_this.hp >= _this.maxHp){\n            _this.hp = _this.maxHp;\n            for(var i = 0 ; i < _this.healthSprites.children; i++){\n                changeHealthBar(i, true);\n            }\n        }\n        else if(_this.hp > 0){\n            for(var i = Math.abs(diff); i > 0; i--){\n                changeHealthBar(_this.hp - (i * (positive ? 1 : -1)) - 1, positive);\n            }\n        }\n        else{\n            for(var i = 0 ; i < _this.healthSprites.children; i++){\n                changeHealthBar(i, false);\n            }\n            returnToMenu();\n        }\n    }\n    \n    _this.takeDmg = function takeDmg(dmg){\n        _this.setHp(_this.hp - dmg);\n    }\n    \n    _this.gainHp = function gainHp(gain){\n        _this.setHp(_this.hp + gain);\n    }\n    \n    function returnToMenu(){\n        //TODO: trigger event and have player play death anim \n        //(maybe hide everything else and pan camera to track player)\n        //wait for input on end of death anim and transition state there\n        game.state.start('Menu');\n    }\n}"
  ]
}